---
{% raw -%}
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"
  vars:
    ssh_identity_file: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/ssh_key"
    external_access_config: []
    # gcp_auth_kind: "{{ molecule_yml.driver.auth_kind | default(omit, true) }}"
    # gcp_network: "{{ molecule_yml.driver.network_name }}"
    # gcp_subnetwork: "{{ molecule_yml.driver.subnetwork_name }}"
    # gcp_vpc_host_project: "{{ molecule_yml.driver.vpc_host_project }}"
    # gcp_project: "{{  molecule_yml.driver.project_id }}"
    # gcp_region: "{{ molecule_yml.driver.region }}"
    # gcp_zone: "{{ molecule_yml.driver.zone }}"
    # gcp_scopes: "{{ molecule_yml.driver.scopes | default(['https://www.googleapis.com/auth/compute'], True) }}"
    # gcp_sa_mail: "{{ molecule_yml.driver.service_account_email | default (omit, true) }}"
    # gcp_sa_file: "{{ molecule_yml.driver.service_account_file | default (omit, true) }}"

  pre_tasks:
    - name: Make sure if linux or windows either specified
      assert:
        that:
          - molecule_yml.driver.instance_os_type == "linux" or
            molecule_yml.driver.instance_os_type == "windows"
        fail_msg: "instance_os_type is possible only to specify linux or windows either"

    - name: get network info
      google.cloud.gcp_compute_network_info:
        filters:
        - name = "{{ molecule_yml.driver.network_name }}"
        project: "{{ molecule_yml.driver.vpc_host_project | default( molecule_yml.driver.project_id ) }}"
        service_account_email: "{{ molecule_yml.driver.service_account_email | default (omit, true) }}"
        service_account_file: "{{ molecule_yml.driver.service_account_file | default (omit, true) }}"
        auth_kind: "{{ molecule_yml.driver.auth_kind | default(omit, true) }}"
      register: my_network
      when: molecule_yml.driver.network_name

    - name: get subnetwork info
      google.cloud.gcp_compute_subnetwork_info:
        filters:
        - name = "{{ molecule_yml.driver.subnetwork_name }}"
        project: "{{ molecule_yml.driver.vpc_host_project | default( molecule_yml.driver.project_id ) }}"
        region: "{{ molecule_yml.driver.region }}"
        service_account_email: "{{ molecule_yml.driver.service_account_email | default (omit, true) }}"
        service_account_file: "{{ molecule_yml.driver.service_account_file | default (omit, true) }}"
        auth_kind: "{{ molecule_yml.driver.auth_kind | default(omit, true) }}"
      register: my_subnetwork
      when: molecule_yml.driver.subnetwork_name

  tasks:

    - name: set external access config
      set_fact:
        external_access_config:
          - access_configs: 
            - name: "External NAT"
              type: "ONE_TO_NAT"       
      when: molecule_yml.driver.external_access

    - name: Include create_linux_instance tasks
      include_tasks: tasks/create_linux_instance.yml
      when:
        - molecule_yml.driver.instance_os_type == "linux"

    - name: Include create_windows_instance tasks
      include_tasks: tasks/create_windows_instance.yml
      when:
        - molecule_yml.driver.instance_os_type == "windows"

  handlers:
    - name: Import main handler tasks
      import_tasks: handlers/main.yml
{%- endraw %}